pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage ('Checkout') {
      steps {
        sh 'echo Checking out git'
        git branch: 'main', url: 'https://github.com/sidhusaiprasanth/myprojectsjenkins'
      }
    }
    stage ('Build and Test') {
      steps {
        sh 'cd javaapps/spring-boot-app && mvn clean package'
      }
    }
    stage ('Static Code Analysis') {
      environment {
        SONAR_URL = "http://20.204.170.42:9000"
      }
      steps{
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
        sh 'cd javaapps/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage ('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "sidhusaiprasanth/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd javaapps/spring-boot-app && docker build -t ${DOCKER_IMAGE} . && docker logout'
          sh 'docker login -u "sidhusaiprasanth" -p "9849199983@Dad" docker.io'
          sh "docker push ${DOCKER_IMAGE}"
          // def dockerImage = docker.image("${DOCKER_IMAGE}")
          // docker.withRegistry('https://index.docker.io/v1', "docker-cred") {
          //   dockerImage.push()
          // }
        }
      }
    }
    stage ('Update deployment File') {
      environment {
        GIT_REPO_NAME = "myprojectsjenkins"
        GIT_USER_NAME = "sidhusaiprasanth"
      }
      steps {
        withCredentials([string(credentialsId: 'github-access-token', variable: 'GITHUB_TOKEN')]) {
            sh '''
                git config user.email "sidhusaiprasanth@gmail.com"
                git config user.name "sidhusaiprasanth"
                BUILD_NUMBER=${BUILD_NUMBER}
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" javaapps/spring-boot-app-manifests/deployment.yml
                git add javaapps/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
      }
    }
  }
}